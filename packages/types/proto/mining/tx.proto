syntax = "proto3";
package stafihub.stafihub.mining;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/stafihub/stafihub/x/mining/types";

// Msg defines the Msg service.
service Msg {
  rpc AddStakePool(MsgAddStakePool) returns (MsgAddStakePoolResponse);
  rpc AddStakeItem(MsgAddStakeItem) returns (MsgAddStakeItemResponse);
  rpc AddRewardPool(MsgAddRewardPool) returns (MsgAddRewardPoolResponse);
  rpc Stake(MsgStake) returns (MsgStakeResponse);
  rpc ClaimReward(MsgClaimReward) returns (MsgClaimRewardResponse);
  rpc Withdraw(MsgWithdraw) returns (MsgWithdrawResponse);
  rpc UpdateStakeItem(MsgUpdateStakeItem) returns (MsgUpdateStakeItemResponse);
  rpc AddMiningProvider(MsgAddMiningProvider) returns (MsgAddMiningProviderResponse);
  rpc RmMiningProvider(MsgRmMiningProvider) returns (MsgRmMiningProviderResponse);
  rpc AddRewardToken(MsgAddRewardToken) returns (MsgAddRewardTokenResponse);
  rpc SetMaxRewardPoolNumber(MsgSetMaxRewardPoolNumber) returns (MsgSetMaxRewardPoolNumberResponse);
  rpc UpdateRewardPool(MsgUpdateRewardPool) returns (MsgUpdateRewardPoolResponse);
  rpc ToggleProviderSwitch(MsgToggleProviderSwitch) returns (MsgToggleProviderSwitchResponse);
  rpc SetMaxStakeItemNumber(MsgSetMaxStakeItemNumber) returns (MsgSetMaxStakeItemNumberResponse);
  rpc AddReward(MsgAddReward) returns (MsgAddRewardResponse);
  rpc ToggleEmergencySwitch(MsgToggleEmergencySwitch) returns (MsgToggleEmergencySwitchResponse);
  rpc EmergencyWithdraw(MsgEmergencyWithdraw) returns (MsgEmergencyWithdrawResponse);
  rpc AddStakeToken(MsgAddStakeToken) returns (MsgAddStakeTokenResponse);
  rpc RmRewardToken(MsgRmRewardToken) returns (MsgRmRewardTokenResponse);
  rpc RmStakeToken(MsgRmStakeToken) returns (MsgRmStakeTokenResponse);
  rpc SetStakeItemLimit(MsgSetStakeItemLimit) returns (MsgSetStakeItemLimitResponse);
  rpc WithdrawRewardToken(MsgWithdrawRewardToken) returns (MsgWithdrawRewardTokenResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgAddStakePool {
  string creator = 1;
  string stakeTokenDenom = 2;
  repeated CreateRewardPoolInfo rewardPoolInfoList = 3;
  repeated CreateStakeItemInfo stakeItemInfoList = 4;
}

message CreateRewardPoolInfo {
  string rewardTokenDenom = 1;
  string totalRewardAmount = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string rewardPerSecond = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  uint64 startTimestamp = 4;
}

message CreateStakeItemInfo {
  uint64 lockSecond = 1;
  // user stakedPower = powerRewardRate * stakedAmount
  string powerRewardRate = 2 [(gogoproto.customtype) = "github.com/stafihub/stafihub/utils.Dec", (gogoproto.nullable) = false];
}


message MsgAddStakePoolResponse {
}

message MsgAddStakeItem {
  string creator = 1;
  uint32 stakePoolIndex = 2;
  uint64 lockSecond = 3;
  string powerRewardRate = 4 [(gogoproto.customtype) = "github.com/stafihub/stafihub/utils.Dec", (gogoproto.nullable) = false];
  bool enable = 5;
}

message MsgAddStakeItemResponse {
}

message MsgAddRewardPool {
  string creator = 1;
  uint32 stakePoolIndex = 2;
  string rewardTokenDenom = 3;
  string totalRewardAmount = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string rewardPerSecond = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  uint64 startTimestamp = 6;
}

message MsgAddRewardPoolResponse {
}

message MsgStake {
  string creator = 1;
  uint32 stakePoolIndex = 2;
  string stakeAmount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  uint32 stakeItemIndex = 4;
}

message MsgStakeResponse {
}

message MsgClaimReward {
  string creator = 1;
  uint32 stakePoolIndex = 2;
  uint32 stakeRecordIndex = 3;
}

message MsgClaimRewardResponse {
}

message MsgWithdraw {
  string creator = 1;
  uint32 stakePoolIndex = 2;
  uint32 stakeRecordIndex = 3;
  string withdrawAmount = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgWithdrawResponse {
}

message MsgUpdateStakeItem {
  string creator = 1;
  uint32 index = 2;
  uint32 stakePoolIndex = 3;
  uint64 lockSecond = 4;
  string powerRewardRate = 5 [(gogoproto.customtype) = "github.com/stafihub/stafihub/utils.Dec", (gogoproto.nullable) = false];
  bool enable = 6;
}

message MsgUpdateStakeItemResponse {
}

message MsgAddMiningProvider {
  string creator = 1;
  string userAddress = 2;
}

message MsgAddMiningProviderResponse {
}

message MsgRmMiningProvider {
  string creator = 1;
  string userAddress = 2;
}

message MsgRmMiningProviderResponse {
}

message MsgAddRewardToken {
  string creator = 1;
  string denom = 2;
  string minTotalRewardAmount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string minRewardPerSecond = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgAddRewardTokenResponse {
}

message MsgSetMaxRewardPoolNumber {
  string creator = 1;
  uint32 number = 2;
}

message MsgSetMaxRewardPoolNumberResponse {
}

message MsgUpdateRewardPool {
  string creator = 1;
  uint32 stakePoolIndex = 2;
  uint32 rewardPoolIndex = 3;
  string rewardPerSecond = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgUpdateRewardPoolResponse {
}

message MsgToggleProviderSwitch {
  string creator = 1;
}

message MsgToggleProviderSwitchResponse {
}

message MsgSetMaxStakeItemNumber {
  string creator = 1;
  uint32 number = 2;
}

message MsgSetMaxStakeItemNumberResponse {
}

message MsgAddReward {
  string creator = 1;
  uint32 stakePoolIndex = 2;
  uint32 rewardPoolIndex = 3;
  string addAmount = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  uint64 startTimestamp = 5;
  string rewardPerSecond = 6 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgAddRewardResponse {
}

message MsgToggleEmergencySwitch {
  string creator = 1;
  uint32 stakePoolIndex = 2;
}

message MsgToggleEmergencySwitchResponse {
}

message MsgEmergencyWithdraw {
  string creator = 1;
  uint32 stakePoolIndex = 2;
  uint32 stakeRecordIndex = 3;
}

message MsgEmergencyWithdrawResponse {
}

message MsgAddStakeToken {
  string creator = 1;
  string denom = 2;
}

message MsgAddStakeTokenResponse {
}

message MsgRmRewardToken {
  string creator = 1;
  string denom = 2;
}

message MsgRmRewardTokenResponse {
}

message MsgRmStakeToken {
  string creator = 1;
  string denom = 2;
}

message MsgRmStakeTokenResponse {
}

message MsgSetStakeItemLimit {
  string creator = 1;
  uint64 maxLockSecond = 2;
  string maxPowerRewardRate = 3 [(gogoproto.customtype) = "github.com/stafihub/stafihub/utils.Dec", (gogoproto.nullable) = false];
}

message MsgSetStakeItemLimitResponse {
}

message MsgWithdrawRewardToken {
  string creator = 1;
  uint32 stakePoolIndex = 2;
  uint32 rewardPoolIndex = 3;
  string withdrawAmount = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgWithdrawRewardTokenResponse {
}

// this line is used by starport scaffolding # proto/tx/message