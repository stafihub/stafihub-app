syntax = "proto3";
package stafihub.stafihub.bridge;

import "gogoproto/gogo.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/stafihub/stafihub/x/bridge/types";

// Msg defines the Msg service.
service Msg {
  rpc SetResourceidToDenom(MsgSetResourceidToDenom) returns (MsgSetResourceidToDenomResponse);
  rpc Deposit(MsgDeposit) returns (MsgDepositResponse);
  rpc AddChainId(MsgAddChainId) returns (MsgAddChainIdResponse);
  rpc SetResourceidType(MsgSetResourceidType) returns (MsgSetResourceidTypeResponse);
  rpc VoteProposal(MsgVoteProposal) returns (MsgVoteProposalResponse);
  rpc RmChainId(MsgRmChainId) returns (MsgRmChainIdResponse);
  rpc SetRelayFeeReceiver(MsgSetRelayFeeReceiver) returns (MsgSetRelayFeeReceiverResponse);
  rpc SetRelayFee(MsgSetRelayFee) returns (MsgSetRelayFeeResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}


message MsgSetResourceidToDenom {
  string creator = 1;
  string resourceId = 2;
  string denom = 3;
}

message MsgSetResourceidToDenomResponse {
}

message MsgDeposit {
  string creator = 1;
  uint32 destChainId = 2;
  string resourceId = 3;
  string amount = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string receiver = 5;
}

message MsgDepositResponse {
}

message MsgAddChainId {
  string creator = 1;
  uint32 chainId = 2;
}

message MsgAddChainIdResponse {
}

message MsgSetResourceidType {
  string creator = 1;
  string resourceId = 2;
  string idType = 3;
}

message MsgSetResourceidTypeResponse {
}

message MsgVoteProposal {
  string creator = 1;
  uint32 chainId = 2;
  uint64 depositNonce = 3;
  string resourceId = 4;
  string amount = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string receiver = 6;
}

message MsgVoteProposalResponse {
}

message MsgRmChainId {
  string creator = 1;
  uint32 chainId = 2;
}

message MsgRmChainIdResponse {
}

message MsgSetRelayFeeReceiver {
  string creator = 1;
  string address = 2;
}

message MsgSetRelayFeeReceiverResponse {
}

message MsgSetRelayFee {
  string creator = 1;
  uint32 chainId = 2;
  string value = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
}

message MsgSetRelayFeeResponse {
}

// this line is used by starport scaffolding # proto/tx/message